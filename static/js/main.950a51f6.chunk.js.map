{"version":3,"sources":["statics.js","reducers/exchangeRates.js","reducers/index.js","reducers/wallet.js","reducers/defaultCurrency.js","reducers/totalValue.js","helpers.js","actions/index.js","components/Currency.js","components/Wallet.js","components/SelectOptions.jsx","components/AddCurrency.js","components/BalanceHeading.js","components/ChangeDefault.js","components/App.js","index.js"],"names":["types","signs","PLN","USD","CAD","AUD","EUR","GBP","CHF","CNY","JPY","KRW","URL","regex","combineReducers","wallet","state","action","type","newState","overload","shortcut","amount","currentValue","previousValue","currency","find","cur","push","sort","a","b","filter","newState1","map","currentRates","previousRates","newState2","exchangeRates","yesterday","defaultCurrency","totalValue","current","previous","dateToString","date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","today","Date","setDate","calcValues","latest","fetchExchangeRates","dispatch","axios","get","fullResponse","rates","data","editCurrenciesValues","response","connect","deleteCurrency","editCurrency","props","isEditing","firstTime","walletIsValid","walletNotValid","isWalletValid","useState","valueInput","setValueInput","isValid","setIsValid","renderPercent","percent","className","toFixed","onClick","onChange","event","str","target","value","result","test","id","placeholder","Number","handleSubmit","ascendingCurrencyOrder","descendingCurrencyOrder","editTotalValue","setFirstTime","setIsEditing","previousTotalValue","currentTotalValue","useEffect","key","SelectOptions","addCurrency","currencyInput","setCurrencyInput","onSubmit","preventDefault","changeDefaultCurrency","setCurrency","e","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.950a51f6.chunk.js","sourcesContent":["export const types = {\n  CHANGE_DEFAULT_CURRENCY: \"CHANGE_DEFAULT_CURRENCY\",\n  ADD_CURRENCY: \"ADD_NEW_CURRENCY\",\n  FETCH_EXCHANGE_RATES: \"FETCH_EXCHANGE_RATES\",\n  EDIT_TOTAL_VALUE: \"EDIT_TOTAL_VALUE\",\n  ASCENDING_CURRENCY_ORDER: \"ASCENDING_CURRENCY_ORDER\",\n  DESCENDING_CURRENCY_ORDER: \"DESCENDING_CURRENCY_ORDER\",\n  DELETE_CURRENCY: \"DELETE_CURRENCY\",\n  EDIT_CURRENCY: \"EDIT_CURRENCY\",\n  EDIT_CURRENCIES_VALUES: \"EDIT_CURRENCIES_VALUES\"\n};\n\nexport const signs = {\n  PLN: \"zł\",\n  USD: \"$\",\n  CAD: \"$\",\n  AUD: \"$\",\n  EUR: \"€\",\n  GBP: \"£\",\n  CHF: \"fr\",\n  CNY: \"¥\",\n  JPY: \"¥\",\n  KRW: \"₩\"\n};\n\nexport const URL = \"https://api.exchangeratesapi.io\";\nexport const regex = /^[1-9][0-9]{0,9}(\\.[0-9]{1,2})?$/;\n","import { types } from \"../statics\";\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case types.FETCH_EXCHANGE_RATES:\n      return action.overload.yesterday\n        ? action.overload\n        : { ...action.overload, yesterday: null };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport wallet from \"./wallet\";\nimport exchangeRates from \"./exchangeRates\";\nimport defaultCurrency from \"./defaultCurrency\";\nimport totalValue from \"./totalValue\";\n\nexport default combineReducers({\n  wallet,\n  exchangeRates,\n  defaultCurrency,\n  totalValue\n});\n","import { types } from \"../statics\";\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    case types.ADD_CURRENCY:\n      const newState = [...state];\n      const { shortcut, amount, currentValue, previousValue } = action.overload;\n      const currency = newState.find(cur => cur.shortcut === shortcut);\n      if (currency) {\n        currency.amount += amount;\n        currency.currentValue += currentValue;\n        currency.previousValue += previousValue;\n      } else {\n        newState.push(action.overload);\n      }\n      newState.sort((a, b) => b.currentValue - a.currentValue);\n      return newState;\n    case types.DELETE_CURRENCY:\n      return state.filter(cur => cur.shortcut !== action.shortcut);\n    case types.EDIT_CURRENCY:\n      const newState1 = state.map(cur =>\n        cur.shortcut === action.overload.shortcut ? action.overload : cur\n      );\n      newState1.sort((a, b) => b.currentValue - a.currentValue);\n      return newState1;\n    case types.EDIT_CURRENCIES_VALUES:\n      const { currentRates, previousRates } = action.overload;\n      const newState2 = state.map(cur => {\n        return {\n          ...cur,\n          currentValue: cur.amount / currentRates[cur.shortcut],\n          previousValue: cur.amount / previousRates[cur.shortcut]\n        };\n      });\n      return newState2;\n    default:\n      return state;\n  }\n};\n","import { types } from \"../statics\";\n\nexport default (state = \"PLN\", action) => {\n  switch (action.type) {\n    case types.CHANGE_DEFAULT_CURRENCY:\n      return action.currency;\n    default:\n      return state;\n  }\n};\n","import { types } from \"../statics\";\n\nexport default (state = { current: 0, previous: 0 }, action) => {\n  switch (action.type) {\n    case types.EDIT_TOTAL_VALUE:\n      return action.overload;\n    default:\n      return state;\n  }\n};\n","const dateToString = date => {\n  const dd = String(date.getDate()).padStart(2, \"0\");\n  const mm = String(date.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n  const yyyy = date.getFullYear();\n  return `${yyyy}-${mm}-${dd}`;\n};\n// today is today's day of the week, but 1 week earlier. Coz api isn't updating that fast.\n\nexport const today = () => {\n  const today = new Date();\n  today.setDate(today.getDate() - 7);\n  return dateToString(today);\n};\n\nexport const yesterday = () => {\n  const today = new Date();\n  today.setDate(today.getDate() - 8);\n  return dateToString(today);\n};\n\nexport const calcValues = (amount, shortcut, exchangeRates) => {\n  const currentValue = amount / exchangeRates.latest[shortcut];\n  const previousValue = exchangeRates.yesterday\n    ? amount / exchangeRates.yesterday[shortcut]\n    : currentValue;\n  return { currentValue, previousValue };\n};\n","import { types, URL } from \"../statics\";\nimport axios from \"axios\";\nimport { yesterday, today } from \"../helpers\";\n\nexport const fetchExchangeRates = currency => async dispatch => {\n  const fullResponse = await axios.get(\n    `${URL}/history?start_at=${yesterday()}&end_at=${today()}&base=${currency}`\n  );\n  const { rates } = fullResponse.data;\n  if (rates[today()] && rates[yesterday()]) {\n    dispatch(editCurrenciesValues(rates[today()], rates[yesterday()]));\n    dispatch({\n      type: types.FETCH_EXCHANGE_RATES,\n      overload: {\n        latest: rates[today()],\n        yesterday: rates[yesterday()]\n      }\n    });\n  } else {\n    const response = await axios.get(`${URL}/latest?base=${currency}`);\n    dispatch(editCurrenciesValues(response.data.rates, response.data.rates));\n    dispatch({\n      type: types.FETCH_EXCHANGE_RATES,\n      overload: {\n        latest: response.data.rates\n      }\n    });\n  }\n};\n\nexport const editTotalValue = (current, previous) => {\n  return {\n    type: types.EDIT_TOTAL_VALUE,\n    overload: {\n      current,\n      previous\n    }\n  };\n};\n\nexport const addCurrency = (shortcut, amount, currentValue, previousValue) => {\n  return {\n    type: types.ADD_CURRENCY,\n    overload: {\n      shortcut,\n      amount,\n      currentValue,\n      previousValue\n    }\n  };\n};\n\nexport const editCurrency = (shortcut, amount, currentValue, previousValue) => {\n  return {\n    type: types.EDIT_CURRENCY,\n    overload: {\n      shortcut,\n      amount,\n      currentValue,\n      previousValue\n    }\n  };\n};\n\nexport const deleteCurrency = shortcut => {\n  return {\n    type: types.DELETE_CURRENCY,\n    shortcut\n  };\n};\n\nexport const ascendingCurrencyOrder = () => {\n  return {\n    type: types.ASCENDING_CURRENCY_ORDER\n  };\n};\nexport const descendingCurrencyOrder = () => {\n  return {\n    type: types.DESCENDING_CURRENCY_ORDER\n  };\n};\n\nexport const changeDefaultCurrency = currency => {\n  return {\n    type: types.CHANGE_DEFAULT_CURRENCY,\n    currency\n  };\n};\n\nexport const editCurrenciesValues = (currentRates, previousRates) => {\n  return {\n    type: types.EDIT_CURRENCIES_VALUES,\n    overload: {\n      currentRates,\n      previousRates\n    }\n  };\n};\n","import React, { useState } from \"react\";\nimport { signs, regex } from \"../statics\";\nimport { connect } from \"react-redux\";\nimport { deleteCurrency, editCurrency } from \"../actions\";\nimport { calcValues } from \"../helpers\";\n\nconst Currency = props => {\n  const {\n    shortcut,\n    amount,\n    currentValue,\n    previousValue,\n    isEditing,\n    firstTime,\n    walletIsValid,\n    walletNotValid,\n    isWalletValid\n  } = props;\n  const [valueInput, setValueInput] = useState(amount);\n  const [isValid, setIsValid] = useState(true);\n\n  const onValueInputChange = event => {\n    const str = event.target.value;\n    var result = regex.test(str);\n    setValueInput(str);\n    if (result) {\n      setIsValid(true);\n      walletIsValid();\n    } else {\n      setIsValid(false);\n      walletNotValid();\n    }\n  };\n\n  const handleSubmit = () => {\n    if (isWalletValid && isValid && Number(valueInput) !== amount) {\n      const { currentValue, previousValue } = calcValues(\n        Number(valueInput),\n        shortcut,\n        props.exchangeRates\n      );\n      props.editCurrency(\n        shortcut,\n        Number(valueInput),\n        currentValue,\n        previousValue\n      );\n    }\n  };\n\n  const renderError = () => {\n    if (isValid) {\n      return;\n    } else {\n      return (\n        <p className=\"error negative\">\n          Value must be in (12.34) format and can't be larger than 10 digits!\n        </p>\n      );\n    }\n  };\n\n  const renderPercent = () => {\n    const percent = (currentValue / previousValue - 1) * 100;\n    if (percent >= 0) {\n      return (\n        <span className=\"percent positive\">{`(+${percent.toFixed(2)}%)`}</span>\n      );\n    } else {\n      return (\n        <span className=\"percent negative\">{`(${percent.toFixed(2)}%)`}</span>\n      );\n    }\n  };\n\n  if (isEditing) {\n    return (\n      <>\n        <div className=\"currency-edit\">\n          <div className=\"currency\">\n            <div className=\"currency__item currency-header\">\n              <strong>{shortcut}</strong>\n              <button\n                onClick={() => props.deleteCurrency(shortcut)}\n                className=\"button--delete\"\n              >\n                <i className=\"fas fa-times fa-2x\"></i>\n              </button>\n            </div>\n            <input\n              onChange={onValueInputChange}\n              value={valueInput}\n              type=\"text\"\n              id=\"value\"\n              placeholder=\"value\"\n              className=\"input--amount\"\n            />\n            <div className=\"currency__item\">\n              {currentValue.toFixed(2) + signs[props.defaultCurrency]}\n              {renderPercent()}\n            </div>\n          </div>\n          <button\n            onClick={() => props.deleteCurrency(shortcut)}\n            className=\"button--delete\"\n          >\n            <i className=\"fas fa-trash fa-2x\"></i>\n          </button>\n        </div>\n        {renderError()}\n      </>\n    );\n  } else {\n    if (!firstTime) {\n      handleSubmit();\n    }\n    return (\n      <div className=\"currency-edit\">\n        <div className=\"currency\">\n          <div className=\"currency__item\">\n            <strong>{shortcut}</strong>\n          </div>\n          <div className=\"currency__item\">{amount + signs[shortcut]}</div>\n          <div className=\"currency__item\">\n            {currentValue.toFixed(2) + signs[props.defaultCurrency]}\n            {renderPercent()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    defaultCurrency: state.defaultCurrency,\n    exchangeRates: state.exchangeRates\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { deleteCurrency, editCurrency }\n)(Currency);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  ascendingCurrencyOrder,\n  descendingCurrencyOrder,\n  editTotalValue\n} from \"../actions\";\nimport Currency from \"./Currency\";\n\nconst Wallet = props => {\n  const [firstTime, setFirstTime] = useState(true);\n  const [isValid, setIsValid] = useState(true);\n  const [isEditing, setIsEditing] = useState(false);\n  let previousTotalValue = 0;\n  let currentTotalValue = 0;\n\n  useEffect(() => {\n    props.editTotalValue(currentTotalValue, previousTotalValue);\n    previousTotalValue = 0;\n    currentTotalValue = 0;\n  });\n\n  const walletIsValid = () => {\n    setIsValid(true);\n  };\n\n  const walletNotValid = () => {\n    setIsValid(false);\n  };\n  const renderCurrencies = () => {\n    return props.wallet.map(\n      ({ shortcut, amount, currentValue, previousValue }) => {\n        previousTotalValue += previousValue;\n        currentTotalValue += currentValue;\n        return (\n          <Currency\n            key={shortcut}\n            firstTime={firstTime}\n            shortcut={shortcut}\n            amount={amount}\n            currentValue={currentValue}\n            previousValue={previousValue}\n            walletIsValid={walletIsValid}\n            walletNotValid={walletNotValid}\n            isEditing={isEditing}\n            isWalletValid={isValid}\n          />\n        );\n      }\n    );\n  };\n  const onButtonClick = () => {\n    if (isEditing && isValid) {\n      setIsEditing(false);\n    } else if (!isEditing) {\n      setFirstTime(false);\n      setIsEditing(true);\n    }\n  };\n  return (\n    <>\n      <div className=\"header\">\n        <h2 className=\"header__title\">Your Wallet</h2>\n        <button onClick={onButtonClick} className=\"button--edit\">\n          {isEditing ? \"Save\" : \"Edit\"}\n        </button>\n      </div>\n      <div className=\"break\"></div>\n      <div className=\"currency-list\">{renderCurrencies()}</div>\n    </>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { wallet: state.wallet };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    ascendingCurrencyOrder,\n    descendingCurrencyOrder,\n    editTotalValue\n  }\n)(Wallet);\n","import React from \"react\";\n\nconst SelectOptions = props => {\n  const currencies = [\n    \"PLN\",\n    \"USD\",\n    \"CAD\",\n    \"AUD\",\n    \"EUR\",\n    \"GBP\",\n    \"CHF\",\n    \"CNY\",\n    \"JPY\",\n    \"KRW\"\n  ];\n  return currencies.map(cur => (\n    <option key={cur} value={cur}>\n      {cur}\n    </option>\n  ));\n};\n\nexport default SelectOptions;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addCurrency } from \"../actions\";\nimport { regex } from \"../statics\";\nimport { calcValues } from \"../helpers\";\nimport SelectOptions from \"./SelectOptions\";\n\nconst AddCurrency = props => {\n  const [valueInput, setValueInput] = useState(\"\");\n  const [currencyInput, setCurrencyInput] = useState(\"USD\");\n  const [isValid, setIsValid] = useState(true);\n\n  const onTextInputChange = event => {\n    const str = event.target.value;\n    const result = regex.test(str);\n    setValueInput(str);\n    result ? setIsValid(true) : setIsValid(false);\n  };\n\n  const onCurrencyInputChange = event => {\n    const str = event.target.value;\n    setCurrencyInput(str);\n    const result = regex.test(str);\n    result ? setIsValid(true) : setIsValid(false);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (regex.test(valueInput)) {\n      setIsValid(true);\n      const amount = Number(valueInput);\n      const { currentValue, previousValue } = calcValues(\n        amount,\n        currencyInput,\n        props.exchangeRates\n      );\n      // addCurrency = (shortcut, amount,currentValue, previousValue)\n      props.addCurrency(currencyInput, amount, currentValue, previousValue);\n      setValueInput(\"\");\n    } else {\n      setIsValid(false);\n    }\n  };\n\n  const renderError = () => {\n    if (isValid) {\n      return;\n    } else {\n      return (\n        <p className=\"error negative\">\n          Value must be in (12.34) format and can't be larger than 10 digits!\n        </p>\n      );\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className=\"form-inline\">\n        <select\n          value={currencyInput}\n          onChange={onCurrencyInputChange}\n          id=\"currency\"\n          className=\"input--currency\"\n        >\n          <SelectOptions />\n        </select>\n        <input\n          onChange={onTextInputChange}\n          value={valueInput}\n          type=\"text\"\n          id=\"value\"\n          placeholder=\"value\"\n          className=\"input--amount\"\n        />\n        <button type=\"submit\" className=\"button--submit mob\">\n          Add\n        </button>\n      </form>\n      {renderError()}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    exchangeRates: state.exchangeRates,\n    defaultCurrency: state.defaultCurrency\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { addCurrency }\n)(AddCurrency);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { signs } from \"../statics\";\n\nconst BalanceHeading = props => {\n  const renderPercent = () => {\n    const percent =\n      (props.currentTotalValue / props.previousTotalValue - 1) * 100;\n    if (!props.currentTotalValue) {\n      return;\n    }\n    if (percent >= 0) {\n      return (\n        <span className=\"percent positive\">{` ( +${percent.toFixed(\n          2\n        )}% )`}</span>\n      );\n    } else {\n      return (\n        <span className=\"percent negative\">{` (${percent.toFixed(2)}%)`}</span>\n      );\n    }\n  };\n\n  return (\n    <div className=\"jumbotron\">\n      <h1 className=\"jumbotron__balance\">\n        <div>Your balance: </div>\n        <div>{props.currentTotalValue.toFixed(2)}</div>\n        {signs[props.defaultCurrency]}\n        {renderPercent()}\n      </h1>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    currentTotalValue: state.totalValue.current,\n    previousTotalValue: state.totalValue.previous,\n    defaultCurrency: state.defaultCurrency\n  };\n};\n\nexport default connect(mapStateToProps)(BalanceHeading);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  changeDefaultCurrency,\n  fetchExchangeRates,\n  editCurrenciesValues\n} from \"../actions\";\nimport SelectOptions from \"./SelectOptions\";\n\n// from props: defaultCurrency\nconst ChangeDefault = props => {\n  const [currency, setCurrency] = useState(props.defaultCurrency);\n\n  const onButtonClick = () => {\n    if (currency !== props.defaultCurrency) {\n      props.fetchExchangeRates(currency, props.defaultCurrency);\n      props.changeDefaultCurrency(currency);\n    }\n  };\n\n  return (\n    <div>\n      <h2 className=\"header--right small\">Change your currency to:</h2>\n      <div className=\"form-inline change\">\n        <select\n          value={currency}\n          onChange={e => setCurrency(e.target.value)}\n          id=\"currency\"\n          className=\"input--currency\"\n        >\n          <SelectOptions />\n        </select>\n        <button\n          onClick={onButtonClick}\n          type=\"submit\"\n          className=\"button--submit\"\n        >\n          Change\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(\n  null,\n  { changeDefaultCurrency, fetchExchangeRates, editCurrenciesValues }\n)(ChangeDefault);\n","import \"../sass/index.scss\";\n\nimport React, { useEffect } from \"react\";\nimport { fetchExchangeRates } from \"../actions\";\nimport { connect } from \"react-redux\";\n\nimport Wallet from \"./Wallet.js\";\nimport AddCurrency from \"./AddCurrency\";\nimport BalanceHeading from \"./BalanceHeading\";\nimport ChangeDefault from \"./ChangeDefault\";\n\nconst App = props => {\n  const { defaultCurrency } = props;\n  useEffect(() => props.fetchExchangeRates(defaultCurrency), []);\n  return (\n    <main className=\"main-container\">\n      <BalanceHeading />\n      <div className=\"divided-container\">\n        <div className=\"divided-container__card\">\n          <Wallet />\n        </div>\n        <div className=\"divided-container__card\">\n          <h2 className=\"header--right\">Add Currency</h2>\n          <div className=\"forms\">\n            <AddCurrency />\n            <ChangeDefault defaultCurrency={defaultCurrency} />\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { defaultCurrency: state.defaultCurrency };\n};\nexport default connect(\n  mapStateToProps,\n  { fetchExchangeRates }\n)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\nimport App from \"./components/App\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}